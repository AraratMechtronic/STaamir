@using Samane.RepositoriesForAuthentication
@model Samane.RepositoriesForAuthentication.AdminUser

@{
    ViewBag.Title = "Register";
}

    @*<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>*@
<div class="wrapper wrapper-admin">
    <div class="inner inner-admin">
        <div class="image-holder">
            <img src="~/images/admin-1.jpg" alt="">
        </div>

        @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "", role = "form" }))
        {
            @Html.AntiForgeryToken()
            <h2> ثبت نام کاربر ادمین </h2>
            @Html.ValidationSummary(false, "پر کردن فیلدهای * الزامی است", new { @class = "text-danger" })
            <div class="form-holder active">
                @*@Html.LabelFor(model => model.NameAndLastName, htmlAttributes: new { @class = "control-label col-md-2" })*@
                @Html.ValidationMessage("NameAndLastName", "", new { @class = "text-danger" })
                @Html.EditorFor(model => model.NameAndLastName, new { htmlAttributes = new { @class = "form-control", placeholder = "نام و نام خانوادگی", title = "نام و نام خانوادگی" } })
                @*@Html.ValidationMessageFor(model => model.NameAndLastName, "*", new { @class = "text-danger" })*@
            </div>

            <div class="form-holder">
                @*@Html.LabelFor(model => model.UserNamee, htmlAttributes: new { @class = "control-label col-md-2" })*@
                @Html.ValidationMessage("UserNamee", "", new { @class = "text-danger" })
                @Html.EditorFor(model => model.UserNamee, new { htmlAttributes = new { @class = "form-control", placeholder = "ایمیل کاربر", title = "ایمیل کاربر" } })
                @* @Html.ValidationMessageFor(model => model.UserNamee, "*", new { @class = "text-danger" })*@
            </div>



            <div class="form-holder">
                @Html.ValidationMessage("Province","",new { @class = "text-danger" })
                @*@Html.LabelFor(m => m.userCategory, new { @class = "col-md-2 control-label" })*@
                @Html.DropDownListFor(m=>m.Province, (List<SelectListItem>)ViewBag.Provinc , " استان خود را انتخاب نمایید", new { id = "statedropdown", onchange = "getstatename();", @class = "form-control" })
            </div>

            <div class="form-holder">
                @Html.ValidationMessage("City","", new { @class = "text-danger" })
                @Html.DropDownListFor(m=>m.City, (List<SelectListItem>)ViewBag.Cities , " شهر خود را انتخاب نمایید", new { id = "citydropdown", onchange = "getcityname();", @class = "form-control" })
            </div>

            @*<div id="City_Dropdown_Container">
                @Html.Partial("_Register", (List<SelectListItem>)ViewBag.RelatedCities)
            </div>*@

            <div class="form-holder">
                @*@Html.LabelFor(model => model.PhoneNumberr, htmlAttributes: new { @class = "control-label col-md-2" })*@
                @Html.ValidationMessage("PhoneNumberr", "", new { @class = "text-danger" })
                @Html.EditorFor(model => model.PhoneNumberr, new { htmlAttributes = new { @class = "form-control", placeholder = "شماره همراه", title = "شماره همراه" } })
                @* @Html.ValidationMessageFor(model => model.PhoneNumberr, "*", new { @class = "text-danger" })*@

            </div>

            <div class="form-holder">
                @* @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })*@
                @Html.ValidationMessage("Password", "", new { @class = "text-danger" })
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "رمز عبور", title = "رمز عبور" } })
                @* @Html.ValidationMessageFor(model => model.Password, "*", new { @class = "text-danger" })*@
            </div>


            <div class="form-holder">
                @* @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })*@
                @Html.ValidationMessage("ConfirmPassword", "", new { @class = "text-danger" })
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "تکرار رمز عبور", title = "تکرار رمز عبور" } })
                @*@Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })*@

            </div>


            <div class="form-login">

                <div class="button">
                    <button Value="Create">
                        ثبت
                        @*<input type="submit" value="ثبت" class="btn btn-default" />*@
                    </button>
                </div>
                <button>
                    @Html.ActionLink("بازگشت", "Authenticate")
                </button>
            </div>


        }

    </div>
</div>


@*<script>
    function getstatename() {
        var x = document.getElementById("statedropdown").selectedIndex;
        var selectedstate = document.getElementsByTagName("option")[x].value;
        @Model.Province = selectedstate;
        alert("state");
        //$.ajax({

        //    type: "POST",
        //    url: "../Account/_Register",
        //    data: { stateName: selectedstate },
        //    succes: function (data) {
        //        alert("success");
        //        $("#City_Dropdown_Container").Html(data);
        //    },
        //    error: function () {
        //        alert("Something went wrong in controller");
        //    }
        //})
        
        }
</script>

<script>
    function getcityname() {
        var y = document.getElementById("citydropdown").selectedIndex;
        var selectedcity = document.getElementsByTagName("option")[y].value;
        @Model.City=selectedcity;
        alert("city");
    }
</script>*@

<div>
    @Html.ActionLink("Back", "Authenticate")
</div>
